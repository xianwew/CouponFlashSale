version: '3.8'

networks:
  flashsale_network:
    driver: bridge

services:
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: KeycloakSimpleFlashSale
    ports:
      - "7080:8080"
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-config.json
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_IMPORT: /opt/keycloak/data/import/realm-config.json
      KC_DB: mysql
      KC_DB_URL_HOST: mysql
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: 123456
      KC_DB_URL: jdbc:mysql://mysql:3306/SimpleFlashSaleKeyCloak
    command: ["start-dev", "--import-realm"]
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'exec 3<>/dev/tcp/localhost/8080; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:8080\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $ERROR'
        ]
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - flashsale_network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --init-file /docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 20s
    networks:
      - flashsale_network

  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s
    networks:
      - flashsale_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0  # Use a specific version
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - flashsale_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    restart: always
    ports:
      - "9092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - flashsale_network

  flashsale:
    image: flashsale:v1
    container_name: flashsale_backend
    restart: always
    ports:
      - "8080:8081"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: SimpleFlashSale
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/SimpleFlashSale
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/SimpleFlashSale
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: SimpleFlashSale
      KEYCLOAK_CLIENT_ID: SimpleFlashSaleClient
      KEYCLOAK_CLIENT_SECRET: Orm6SyrIN5W3t7mQBjwiH6xjvycZ774e
      KEYCLOAK_ADMIN_USERNAME: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      REDIS_URL: redis://redis:6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_TOPIC_PAYMENT: payment_orders
    networks:
      - flashsale_network

volumes:
  mysql_data:
  redis_data:
